name: Create Release

on:
  push:
    tags: ["v[0-9]+.[0-9]+.[0-9]+*"]

env:
  NAME: plantuml-to-drawio

defaults:
  run:
    shell: bash

jobs:
  build:
    name: ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04, macos-13, windows-2019]
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.12.5"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r ./requirements.txt

      - name: Create version and Build for Windows
        if: ${{ runner.os == 'Windows' }}
        run: |
          mkdir ./build
          pyivf-make_version --source-format yaml --metadata-source ./metadata.yml --outfile ./metadata.rc
          pyinstaller ./src/main.py \
          --distpath="dist/$RUNNER_OS" \
          --noconfirm \
          --clean \
          --onefile \
          --name="${NAME}_win" \
          --add-data="plantuml-mit-1.2025.2.jar:." \
          --windowed \
          --icon="icon.png" \
          --disable-windowed-traceback \
          --version-file="metadata.rc" \
          --uac-admin

      - name: Build for Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          pyinstaller ./src/main.py \
          --distpath="dist/$RUNNER_OS" \
          --noconfirm \
          --clean \
          --onefile \
          --name="${NAME}_linux" \
          --add-data="plantuml-mit-1.2025.2.jar:."

      - name: Build for macOS
        if: ${{ runner.os == 'macOS' }}
        run: |
          pyinstaller ./src/main.py \
          --distpath="dist/$RUNNER_OS" \
          --noconfirm \
          --clean \
          --onefile \
          --name="${NAME}_macos" \
          --add-data="plantuml-mit-1.2025.2.jar:." \
          --windowed \
          --icon="icon.png" \
          --disable-windowed-traceback

      - name: Upload result job
        uses: actions/upload-artifact@v4
        with:
          name: ${{ runner.os }}
          path: ./dist/${{ runner.os }}

  release:
    name: release
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: write
      id-token: write
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist/

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          draft: false
          prerelease: false
          files: |
            dist/Linux/*
            dist/macOS/*
            dist/Windows/*
